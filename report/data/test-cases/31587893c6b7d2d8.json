{"uid":"31587893c6b7d2d8","name":"test_open_carcenter","fullName":"scripts.test01_open_carcenter.TestOpenCarcenter#test_open_carcenter","historyId":"90a8e1d0c1efb8009e96b4bc52d25ae5","time":{"start":1690337544948,"stop":1690337576482,"duration":31534},"status":"broken","statusMessage":"Exception: 没有找到，对应的feature的元素，请检查。","statusTrace":"self = <scripts.test01_open_carcenter.TestOpenCarcenter object at 0x000001E1DC4CFAC0>\n\n>   ???\n\nscripts\\test01_open_carcenter.py:35: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\npage\\carcenter_page.py:33: in get_carcenter_txt\n    return self.get_feature_text(self.carenergy)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <page.carcenter_page.CarcenterPage object at 0x000001E1DBE0EF50>\nfeature = ('xpath', \"//*[contains(@text,'能源管理')]\"), timeout = 30.0, poll = 1.0\n\n    def get_feature_text(self, feature, timeout=30.0, poll=1.0):\n        \"\"\"\n        根据元素的特征，获取元素的文字内容\n        :param feature: 元素的特征\n        :return: 元素的文字内容\n        \"\"\"\n        if self.is_feature_exist(feature, timeout, poll):\n            return self.find_element(feature, timeout, poll).text\n        else:\n>           raise Exception(\"没有找到，对应的feature的元素，请检查。\")\nE           Exception: 没有找到，对应的feature的元素，请检查。\n\nbase\\base_action.py:71: Exception","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"_xunit_setup_method_fixture_TestOpenCarcenter","time":{"start":1690337530892,"stop":1690337544948,"duration":14056},"status":"passed","steps":[{"name":"appcenter页 - 向右滑动屏幕","time":{"start":1690337541069,"stop":1690337544947,"duration":3878},"status":"passed","steps":[],"attachments":[{"uid":"4da47512e1e682f3","name":"滑动屏幕","source":"4da47512e1e682f3.png","type":"image/png","size":145208}],"parameters":[],"stepsCount":0,"hasContent":true,"shouldDisplayMessage":false,"attachmentsCount":1}],"attachments":[],"parameters":[],"stepsCount":1,"hasContent":true,"shouldDisplayMessage":false,"attachmentsCount":1}],"testStage":{"status":"broken","statusMessage":"Exception: 没有找到，对应的feature的元素，请检查。","statusTrace":"self = <scripts.test01_open_carcenter.TestOpenCarcenter object at 0x000001E1DC4CFAC0>\n\n>   ???\n\nscripts\\test01_open_carcenter.py:35: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\npage\\carcenter_page.py:33: in get_carcenter_txt\n    return self.get_feature_text(self.carenergy)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <page.carcenter_page.CarcenterPage object at 0x000001E1DBE0EF50>\nfeature = ('xpath', \"//*[contains(@text,'能源管理')]\"), timeout = 30.0, poll = 1.0\n\n    def get_feature_text(self, feature, timeout=30.0, poll=1.0):\n        \"\"\"\n        根据元素的特征，获取元素的文字内容\n        :param feature: 元素的特征\n        :return: 元素的文字内容\n        \"\"\"\n        if self.is_feature_exist(feature, timeout, poll):\n            return self.find_element(feature, timeout, poll).text\n        else:\n>           raise Exception(\"没有找到，对应的feature的元素，请检查。\")\nE           Exception: 没有找到，对应的feature的元素，请检查。\n\nbase\\base_action.py:71: Exception","steps":[{"name":"车辆页 - 点击 车辆","time":{"start":1690337544948,"stop":1690337546047,"duration":1099},"status":"passed","steps":[],"attachments":[{"uid":"551cec36b87ded90","name":"点击车辆","source":"551cec36b87ded90.png","type":"image/png","size":116684}],"parameters":[],"stepsCount":0,"hasContent":true,"shouldDisplayMessage":false,"attachmentsCount":1},{"name":"关于 - 获取 车辆详情页面状态","time":{"start":1690337546047,"stop":1690337576482,"duration":30435},"status":"broken","statusMessage":"Exception: 没有找到，对应的feature的元素，请检查。\n","statusTrace":"  File \"C:\\Users\\8252134\\AppData\\Local\\Programs\\Python\\Python310\\lib\\site-packages\\allure_commons\\_allure.py\", line 192, in impl\n    return func(*a, **kw)\n  File \"E:\\DM\\ShirleyPytest\\page\\carcenter_page.py\", line 33, in get_carcenter_txt\n    return self.get_feature_text(self.carenergy)\n  File \"E:\\DM\\ShirleyPytest\\base\\base_action.py\", line 71, in get_feature_text\n    raise Exception(\"没有找到，对应的feature的元素，请检查。\")\n","steps":[],"attachments":[{"uid":"19f596fda7e8e1ce","name":"查看车辆详情页","source":"19f596fda7e8e1ce.png","type":"image/png","size":116566}],"parameters":[],"stepsCount":0,"hasContent":true,"shouldDisplayMessage":true,"attachmentsCount":1}],"attachments":[{"uid":"a747bc055fc64ef2","name":"log","source":"a747bc055fc64ef2.txt","type":"text/plain","size":287}],"parameters":[],"stepsCount":2,"hasContent":true,"shouldDisplayMessage":true,"attachmentsCount":3},"afterStages":[{"name":"_xunit_setup_method_fixture_TestOpenCarcenter::0","time":{"start":1690337576506,"stop":1690337576687,"duration":181},"status":"broken","statusMessage":"AttributeError: 'BaseAction' object has no attribute 'cmd'\n","statusTrace":"  File \"C:\\Users\\8252134\\AppData\\Local\\Programs\\Python\\Python310\\lib\\site-packages\\allure_commons\\_allure.py\", line 221, in __call__\n    return self._fixture_function(*args, **kwargs)\n  File \"C:\\Users\\8252134\\AppData\\Local\\Programs\\Python\\Python310\\lib\\site-packages\\_pytest\\fixtures.py\", line 911, in _teardown_yield_fixture\n    next(it)\n  File \"C:\\Users\\8252134\\AppData\\Local\\Programs\\Python\\Python310\\lib\\site-packages\\_pytest\\python.py\", line 907, in xunit_setup_method_fixture\n    _call_with_optional_argument(func, method)\n  File \"C:\\Users\\8252134\\AppData\\Local\\Programs\\Python\\Python310\\lib\\site-packages\\_pytest\\python.py\", line 776, in _call_with_optional_argument\n    func()\n  File \"E:\\DM\\ShirleyPytest\\scripts\\test01_open_carcenter.py\", line 28, in teardown\n    # self.killallapp = self.base.killallapp()\n  File \"E:\\DM\\ShirleyPytest\\base\\base_action.py\", line 251, in killallapp\n    self.run_cmd(cmd1)\n  File \"E:\\DM\\ShirleyPytest\\base\\base_action.py\", line 201, in run_cmd\n    p = Popen(self.cmd,shell=True,stdin=PIPE,stdout=PIPE,stderr=STDOUT)\n","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"hasContent":true,"shouldDisplayMessage":true,"attachmentsCount":0}],"labels":[{"name":"severity","value":"blocker"},{"name":"parentSuite","value":"scripts"},{"name":"suite","value":"test01_open_carcenter"},{"name":"subSuite","value":"TestOpenCarcenter"},{"name":"host","value":"H-K4E-232519"},{"name":"thread","value":"8172-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"scripts.test01_open_carcenter"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":true,"retry":true,"extra":{"categories":[],"tags":[]},"source":"31587893c6b7d2d8.json","parameterValues":[]}